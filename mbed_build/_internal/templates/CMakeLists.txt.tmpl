# This file was automagically generated by mbed.org.
# If you would like to add your own targets, create a
# project.cmake file locally in your project directory.

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)
PROJECT({{project_name}} C CXX ASM)

# if the environment does not specify build type, set to Debug
IF(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Debug"
        CACHE STRING "Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel."
        FORCE)
ENDIF()

# uncomment below to have a verbose build process
#SET(CMAKE_VERBOSE_MAKEFILE ON)

ADD_DEFINITIONS(
  {% for d in definitions %}{{d}}
  {% endfor %}
)

# executable {{project_name}}
ADD_EXECUTABLE({{project_name}}
  {% for src in source_files %}{{src}}
  {% endfor %}
)

TARGET_INCLUDE_DIRECTORIES({{project_name}} PUBLIC
  {% for p in include_dirs %}{{p}}
  {% endfor %}
)

SET_TARGET_PROPERTIES({{project_name}} PROPERTIES ENABLE_EXPORTS 1)

# add syslibs dependencies to create the correct linker order
TARGET_LINK_LIBRARIES({{project_name}} {{link_libraries|join(" ")}})

add_custom_command(TARGET {{project_name}} PRE_LINK
                   COMMAND "{{cxx_preprocessor}}" -E -P {{cxx_pp|join(" ")}} {{linker_script}} -o ${CMAKE_CURRENT_BINARY_DIR}/{{project_name}}_pp.link_script.ld
                   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                   BYPRODUCTS "${CMAKE_CURRENT_BINARY_DIR}/{{project_name}}_pp.link_script.ld"
)

add_custom_command(TARGET {{project_name}} POST_BUILD
                   COMMAND ${ELF2BIN} -O ihex $<TARGET_FILE:{{project_name}}> $<TARGET_FILE:{{project_name}}>.hex
                   COMMAND ${CMAKE_COMMAND} -E echo "-- built: $<TARGET_FILE:{{project_name}}>.hex"
)

{% if hex_files %}
add_custom_command(TARGET {{project_name}} POST_BUILD
                   COMMAND ${SREC_CAT}
                        {% for f in hex_files %}${CMAKE_CURRENT_SOURCE_DIR}/{{f}} {% endfor %}
                        -intel $<TARGET_FILE:{{project_name}}>.hex
                        -intel -o $<TARGET_FILE:{{project_name}}>-combined.hex -intel --line-length=44
                   COMMAND ${CMAKE_COMMAND} -E echo "-- built: $<TARGET_FILE:{{project_name}}>-combined.hex"
)
{% endif %}

IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/project.cmake)
  INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/project.cmake)
ELSE()
  MESSAGE(STATUS "Add a local project.cmake file to add your own targets.")
ENDIF()

# this will take care of binary directories generated by cmake/clion not to confuse the cli build
FILE(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/.mbedignore" CONTENT "*")
